version: "3"
services:
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx-proxy/certs:/etc/nginx/certs
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - ./nginx-proxy/html:/usr/share/nginx/html
    restart: always
    depends_on:
      - "nginx-proxy"
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/certs:/etc/nginx/certs:ro
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - ./nginx-proxy/html:/usr/share/nginx/html
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - appnet
    restart: always
    depends_on:
      - app
      - frontend
      - background
      - echo-server
  elasticsearch:
    image: registry.cn-hangzhou.aliyuncs.com/duc-cnzj/elasticsearch_with_ik:6.4.2
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    expose:
      - "9200"
    restart: always
    networks:
      - appnet
  frontend:
    image: registry.cn-hangzhou.aliyuncs.com/duc-cnzj/blog_frontend:latest
    working_dir: /app
    restart: always
    environment:
      - VIRTUAL_HOST=whoops-cn.club,www.whoops-cn.club
      - LETSENCRYPT_HOST=whoops-cn.club,www.whoops-cn.club
    networks:
      - appnet
    volumes:
      - ./configuration/front-nginx.conf:/etc/nginx/nginx.conf
      - ./configuration/default.conf:/etc/nginx/conf.d/default.conf
  background:
    image: registry.cn-hangzhou.aliyuncs.com/duc-cnzj/blog_backgroung:latest
    working_dir: /app
    restart: always
    environment:
      - VIRTUAL_HOST=admin.whoops-cn.club
      - LETSENCRYPT_HOST=admin.whoops-cn.club
    networks:
      - appnet
  app:
    image: registry.cn-hangzhou.aliyuncs.com/duc-cnzj/blog_app
    working_dir: /var/www/html
    networks:
      - appnet
    restart: always
    volumes:
      - ./configuration/app.conf:/etc/nginx/sites-available/default
      - ./images:/var/www/html/public/images
      - ./configuration/app-nginx.conf:/etc/nginx/nginx.conf
      - ./configuration/www.conf:/etc/php/7.2/fpm/pool.d/www.conf
      - ./configuration/init.sh:/var/www/html/init.sh
      - ./configuration/php.ini:/etc/php/7.2/fpm/php.ini
      - ./backups:/var/www/html/storage/app/backups
    environment:
      VIRTUAL_HOST: api.whoops-cn.club 
      LETSENCRYPT_HOST: api.whoops-cn.club
      DB_HOST: db
      DB_DATABASE: homestead
      DB_PORT: 3306
      DB_USERNAME: homestead
      DB_PASSWORD: secret
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BACKUP_ENABLED: 'true'
      BASH_NAMES: init.sh
      GITHUB_CLIENT_ID: 8fd6f41dcfc1001089c7
      GITHUB_CLIENT_SECRET: 3ea90857a5524407654ed9ddcceacf82a429e9ad
      GITHUB_REDIRECT: https://api.whoops-cn.club/login/github/callback
      FRONTEND_DOMAIN: https://whoops-cn.club/
    expose:
      - "80"
    command: /bin/bash -c "envsubst < /var/www/html/.env.template > /var/www/html/.env && start-container"
  redis:
    image: redis:alpine
    networks:
      - appnet
    volumes:
      - redisdata:/data
    ports:
      - 16379:6379
    restart: always
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
    networks:
      - appnet
    restart: always
    volumes:
      - dbdata:/var/lib/mysql
  echo-server:
    image: registry.cn-hangzhou.aliyuncs.com/duc-cnzj/laravel-echo-server
    environment:
      VIRTUAL_HOST: ws.whoops-cn.club
      LETSENCRYPT_HOST: ws.whoops-cn.club
      VIRTUAL_PORT: 6001
    ports:
     - "6001:6001"
    restart: always
    networks:
      - appnet
    volumes:
     - ./configuration/laravel-echo-server.json:/usr/src/app/laravel-echo-server.json
    depends_on:
      - app
      - redis
networks:
  appnet:
    driver: bridge
volumes:
  dbdata:
    driver: local
  esdata:
    driver: local
  redisdata:
    driver: local
